package org.cvm4j.cvm4j;

import org.java_websocket.WebSocket;
import org.java_websocket.handshake.ClientHandshake;
import org.java_websocket.server.WebSocketServer;
import org.w3c.dom.Document;
import org.w3c.dom.Element;
import org.w3c.dom.Node;
import org.w3c.dom.NodeList;
import org.xml.sax.SAXException;

import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.ParserConfigurationException;
import java.io.File;
import java.io.IOException;
import java.net.InetSocketAddress;
import java.util.Arrays;

public class WebsocketServer extends WebSocketServer {


    public WebsocketServer(InetSocketAddress address) {
        super(address);
    }

    @Override
    public void onOpen(WebSocket webSocket, ClientHandshake clientHandshake) {
    }

    @Override
    public void onClose(WebSocket webSocket, int i, String s, boolean b) {
    }

    @Override
    public void onMessage(WebSocket webSocket, String s) {
        String cd = System.getProperty("user.dir");

        File configfile = new File(cd + "/cvm4j.xml");
        DocumentBuilderFactory dbFactory = DocumentBuilderFactory.newInstance();
        DocumentBuilder dBuilder = null;
        try {
            dBuilder = dbFactory.newDocumentBuilder();
        } catch (ParserConfigurationException e) {
            e.printStackTrace();
        }
        Document xmldoc = null;
        try {
            xmldoc = dBuilder.parse(configfile);
        } catch (SAXException e) {
            System.out.println("cvm4j crash report");
            System.out.println("**************************");
            System.out.println("cvm4j has crashed, network configuration or JAR modification might be the problem.\n\n" + e.toString());
        } catch (IOException e) {
            System.out.println("cvm4j crash report");
            System.out.println("**************************");
            System.out.println("cvm4j has crashed, network configuration or JAR modification might be the problem.\n\n" + e.toString());
        }
        xmldoc.getDocumentElement().normalize();
        int temp = 0;
        NodeList list = xmldoc.getElementsByTagName("cvm4j");
        Node node = list.item(temp);
        Element element = (Element) node;
        String vmwidth = element.getElementsByTagName("width").item(0).getTextContent();
        String vmheight = element.getElementsByTagName("height").item(0).getTextContent();
        String nodename = element.getElementsByTagName("nodename").item(0).getTextContent();
        String namevm = element.getElementsByTagName("vmname").item(0).getTextContent();
        String[] param = GuacUtil.DecodeGuac(s);
        System.out.println("[i] New WebSocket message: " + Arrays.toString(param));
        switch (param[0]) {
            case "list": {
                webSocket.send(GuacUtil.EncodeGuac("list", nodename, namevm));
                break;
            }
            case "connect": {
                webSocket.send(GuacUtil.EncodeGuac("connect", "1", "0", "0", "0"));
                webSocket.send(GuacUtil.EncodeGuac("size", "0", vmwidth, vmheight));
                webSocket.send(GuacUtil.EncodeGuac("png", "14", "0", "0", "0", ""));
                webSocket.send(GuacUtil.EncodeGuac("sync", "1642530413"));
                break;
            }
            case "chat": {
                broadcast(GuacUtil.EncodeGuac(new String[]{"chat", "user", param[1]}));
                break;
            }
            default:
                break;
        }
    }

    @Override
    public void onError(WebSocket webSocket, Exception e) {
    }

    @Override
    public void onStart() {

    }
}
